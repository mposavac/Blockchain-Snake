const Web3 = require("web3");
const web3 = new Web3("http://127.0.0.1:8545");

const ABI = [
  {
    constant: true,
    inputs: [],
    name: "getName",
    outputs: [
      {
        name: "",
        type: "string"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_points",
        type: "uint256"
      },
      {
        name: "_playerName",
        type: "string"
      }
    ],
    name: "setPoints",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPoints",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];
const byteCode =
  "6080604052600080556040805190810160405280600681526020017f506c61796572000000000000000000000000000000000000000000000000000081525060019080519060200190610053929190610066565b5034801561006057600080fd5b5061010b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a757805160ff19168380011785556100d5565b828001600101855582156100d5579182015b828111156100d45782518255916020019190600101906100b9565b5b5090506100e291906100e6565b5090565b61010891905b808211156101045760008160009055506001016100ec565b5090565b90565b61033c8061011a6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317d7de7c1461005c57806320c7bc53146100ec578063f4b7095b1461015f575b600080fd5b34801561006857600080fd5b5061007161018a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100b1578082015181840152602081019050610096565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100f857600080fd5b5061015d60048036038101908080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061022c565b005b34801561016b57600080fd5b50610174610262565b6040518082815260200191505060405180910390f35b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b5050505050905090565b6000548211156102595781600081905550806001908051906020019061025392919061026b565b5061025e565b600080fd5b5050565b60008054905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102ac57805160ff19168380011785556102da565b828001600101855582156102da579182015b828111156102d95782518255916020019190600101906102be565b5b5090506102e791906102eb565b5090565b61030d91905b808211156103095760008160009055506001016102f1565b5090565b905600a165627a7a72305820c0eea366f0632c5d5b8aa5a2f7cb03cd6362cf9b08192148444061527b316b860029";
const address = process.env.FROM_ADDRESS;

var contract = new web3.eth.Contract(ABI);

contract
  .deploy({ data: byteCode })
  .send({ from: address, gas: 4700000 }, (error, transactionHash) =>
    console.log("Error:", error, transactionHash)
  )
  .then(function(result) {
    console.log(result);
  });
